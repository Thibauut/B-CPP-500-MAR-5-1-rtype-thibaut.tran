name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Clean CMake files & Conan libs
      run: |
        cd build
        rm -rf ./build/
        rm -rf ./CMakeFiles/
        rm -rf ./ConanLibs/
        rm -rf ./cmake_install.cmake
        rm -rf ./CMakeCache.txt
        rm -rf .CMakeUserPresets.json
        rm -rf ./Makefile
        cd ..

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"

    - name: Create default Conan profile
      run: conan profile detect --force

    - name: Install System lib
      run: |
        sudo apt-get update
        sudo apt-get install libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev

    - name: Build Conan and Build with CMake
      run: |
        cd build
        sudo conan install .. --build=missing --output-folder=ConanLibs/ -c tools.system.package_manager:mode=install
        cmake -DCMAKE_TOOLCHAIN_FILE=build/ConanLibs/conan_toolchain.cmake -DCMAKE_PREFIX_PATH=/build/ -DCMAKE_BUILD_TYPE=Release ..
        make -C ./build/ CXX=g++-17
        cd ..

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
